{"ast":null,"code":"var _jsxFileName = \"E:\\\\React Js\\\\react-firebase-chat-app-main\\\\react-firebase-chat-app-main\\\\src\\\\components\\\\Chat.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { db, auth } from \"../firebase-config\";\nimport { collection, addDoc, where, serverTimestamp, onSnapshot, query, orderBy, setDoc, doc, updateDoc, deleteDoc } from \"firebase/firestore\";\nimport EmojiPicker from \"emoji-picker-react\";\nimport \"../styles/Chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst reactionOptions = [\"👍\", \"❤️\", \"😂\", \"😮\", \"😢\"];\nexport const Chat = _ref => {\n  _s();\n  let {\n    room\n  } = _ref;\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [typingUsers, setTypingUsers] = useState([]);\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const typingRef = collection(db, \"typing\");\n  const messagesRef = collection(db, \"messages\");\n  const typingTimeout = useRef(null);\n  const inputRef = useRef(null);\n  useEffect(() => {\n    const queryMessages = query(messagesRef, where(\"room\", \"==\", room), orderBy(\"createdAt\"));\n    const unsubscribe = onSnapshot(queryMessages, snapshot => {\n      const msgs = [];\n      snapshot.forEach(doc => {\n        msgs.push({\n          ...doc.data(),\n          id: doc.id\n        });\n      });\n      setMessages(msgs);\n    });\n    const typingQuery = query(typingRef, where(\"room\", \"==\", room));\n    const unsubscribeTyping = onSnapshot(typingQuery, snapshot => {\n      const usersTyping = [];\n      snapshot.forEach(doc => {\n        if (doc.id !== auth.currentUser.uid) {\n          usersTyping.push(doc.data().user);\n        }\n      });\n      setTypingUsers(usersTyping);\n    });\n    return () => {\n      unsubscribe();\n      unsubscribeTyping();\n    };\n  }, [room]);\n  const handleTyping = async value => {\n    setNewMessage(value);\n    const currentUser = auth.currentUser;\n    if (typingTimeout.current) {\n      clearTimeout(typingTimeout.current);\n    }\n    if (value.trim() !== \"\") {\n      await setDoc(doc(db, \"typing\", currentUser.uid), {\n        user: currentUser.displayName,\n        room,\n        timestamp: serverTimestamp()\n      });\n      typingTimeout.current = setTimeout(async () => {\n        await deleteDoc(doc(db, \"typing\", currentUser.uid));\n      }, 3000);\n    } else {\n      await deleteDoc(doc(db, \"typing\", currentUser.uid));\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (newMessage.trim() === \"\") return;\n    const currentUser = auth.currentUser;\n    await addDoc(messagesRef, {\n      text: newMessage,\n      createdAt: serverTimestamp(),\n      user: currentUser.displayName,\n      photoURL: currentUser.photoURL || \"\",\n      uid: currentUser.uid,\n      room,\n      reactions: {}\n    });\n    await deleteDoc(doc(db, \"typing\", currentUser.uid));\n    setNewMessage(\"\");\n    setShowEmojiPicker(false);\n  };\n  const handleEmojiClick = emojiData => {\n    setNewMessage(prev => prev + emojiData.emoji);\n    inputRef.current.focus();\n  };\n  const getShortName = fullName => {\n    const parts = fullName.trim().split(\" \");\n    return parts.length >= 2 ? parts[parts.length - 1] : fullName;\n  };\n  const handleReaction = async (messageId, emoji) => {\n    const currentUser = auth.currentUser;\n    const message = messages.find(msg => msg.id === messageId);\n    const currentReactions = message.reactions || {};\n    const existingUsers = currentReactions[emoji] || [];\n    const hasReacted = existingUsers.includes(currentUser.uid);\n    const updatedUsers = hasReacted ? existingUsers.filter(id => id !== currentUser.uid) : [...existingUsers, currentUser.uid];\n    const updatedReactions = {\n      ...currentReactions,\n      [emoji]: updatedUsers\n    };\n    await updateDoc(doc(db, \"messages\", messageId), {\n      reactions: updatedReactions\n    });\n  };\n  const renderReactions = function () {\n    let reactions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let messageId = arguments.length > 1 ? arguments[1] : undefined;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reactions\",\n      children: reactionOptions.map(emoji => {\n        var _reactions$emoji, _reactions$emoji2;\n        const count = ((_reactions$emoji = reactions[emoji]) === null || _reactions$emoji === void 0 ? void 0 : _reactions$emoji.length) || 0;\n        const reacted = (_reactions$emoji2 = reactions[emoji]) === null || _reactions$emoji2 === void 0 ? void 0 : _reactions$emoji2.includes(auth.currentUser.uid);\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `reaction-button ${reacted ? \"active\" : \"\"}`,\n          onClick: () => handleReaction(messageId, emoji),\n          children: [emoji, \" \", count > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 37\n          }, _this)]\n        }, emoji, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, _this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome to: \", room.toUpperCase()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: message.photoURL && message.photoURL.startsWith(\"http\") ? message.photoURL : \"https://via.placeholder.com/35\",\n          alt: \"avatar\",\n          className: \"avatar\",\n          onError: e => {\n            e.target.onerror = null;\n            e.target.src = \"https://via.placeholder.com/35\";\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"user\",\n            children: [getShortName(message.user), \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), \" \", message.text, renderReactions(message.reactions, message.id)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this)), typingUsers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typing-indicator\",\n        children: [typingUsers.join(\", \"), \" \", typingUsers.length > 1 ? \"are\" : \"is\", \" typing...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"new-message-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: inputRef,\n          type: \"text\",\n          value: newMessage,\n          onChange: e => handleTyping(e.target.value),\n          className: \"new-message-input\",\n          placeholder: \"Type your message here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => setShowEmojiPicker(prev => !prev),\n          className: \"emoji-button\",\n          children: \"\\uD83D\\uDE0A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), showEmojiPicker && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emoji-picker\",\n        children: /*#__PURE__*/_jsxDEV(EmojiPicker, {\n          onEmojiClick: handleEmojiClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"send-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"9GI01QCUO941moMFg4iW2NeqGzc=\");\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","db","auth","collection","addDoc","where","serverTimestamp","onSnapshot","query","orderBy","setDoc","doc","updateDoc","deleteDoc","EmojiPicker","reactionOptions","Chat","room","messages","setMessages","newMessage","setNewMessage","typingUsers","setTypingUsers","showEmojiPicker","setShowEmojiPicker","typingRef","messagesRef","typingTimeout","inputRef","queryMessages","unsubscribe","snapshot","msgs","forEach","push","data","id","typingQuery","unsubscribeTyping","usersTyping","currentUser","uid","user","handleTyping","value","current","clearTimeout","trim","displayName","timestamp","setTimeout","handleSubmit","event","preventDefault","text","createdAt","photoURL","reactions","handleEmojiClick","emojiData","prev","emoji","focus","getShortName","fullName","parts","split","length","handleReaction","messageId","message","find","msg","currentReactions","existingUsers","hasReacted","includes","updatedUsers","filter","updatedReactions","renderReactions","map","count","reacted","toUpperCase","startsWith","e","target","onerror","src","join"],"sources":["E:/React Js/react-firebase-chat-app-main/react-firebase-chat-app-main/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { db, auth } from \"../firebase-config\";\nimport {\n  collection,\n  addDoc,\n  where,\n  serverTimestamp,\n  onSnapshot,\n  query,\n  orderBy,\n  setDoc,\n  doc,\n  updateDoc,\n  deleteDoc,\n} from \"firebase/firestore\";\n\nimport EmojiPicker from \"emoji-picker-react\";\nimport \"../styles/Chat.css\";\n\nconst reactionOptions = [\"👍\", \"❤️\", \"😂\", \"😮\", \"😢\"];\n\nexport const Chat = ({ room }) => {\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [typingUsers, setTypingUsers] = useState([]);\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n\n  const typingRef = collection(db, \"typing\");\n  const messagesRef = collection(db, \"messages\");\n  const typingTimeout = useRef(null);\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    const queryMessages = query(\n      messagesRef,\n      where(\"room\", \"==\", room),\n      orderBy(\"createdAt\")\n    );\n\n    const unsubscribe = onSnapshot(queryMessages, (snapshot) => {\n      const msgs = [];\n      snapshot.forEach((doc) => {\n        msgs.push({ ...doc.data(), id: doc.id });\n      });\n      setMessages(msgs);\n    });\n\n    const typingQuery = query(typingRef, where(\"room\", \"==\", room));\n    const unsubscribeTyping = onSnapshot(typingQuery, (snapshot) => {\n      const usersTyping = [];\n      snapshot.forEach((doc) => {\n        if (doc.id !== auth.currentUser.uid) {\n          usersTyping.push(doc.data().user);\n        }\n      });\n      setTypingUsers(usersTyping);\n    });\n\n    return () => {\n      unsubscribe();\n      unsubscribeTyping();\n    };\n  }, [room]);\n\n  const handleTyping = async (value) => {\n    setNewMessage(value);\n    const currentUser = auth.currentUser;\n\n    if (typingTimeout.current) {\n      clearTimeout(typingTimeout.current);\n    }\n\n    if (value.trim() !== \"\") {\n      await setDoc(doc(db, \"typing\", currentUser.uid), {\n        user: currentUser.displayName,\n        room,\n        timestamp: serverTimestamp(),\n      });\n\n      typingTimeout.current = setTimeout(async () => {\n        await deleteDoc(doc(db, \"typing\", currentUser.uid));\n      }, 3000);\n    } else {\n      await deleteDoc(doc(db, \"typing\", currentUser.uid));\n    }\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (newMessage.trim() === \"\") return;\n\n    const currentUser = auth.currentUser;\n\n    await addDoc(messagesRef, {\n      text: newMessage,\n      createdAt: serverTimestamp(),\n      user: currentUser.displayName,\n      photoURL: currentUser.photoURL || \"\",\n      uid: currentUser.uid,\n      room,\n      reactions: {},\n    });\n\n    await deleteDoc(doc(db, \"typing\", currentUser.uid));\n    setNewMessage(\"\");\n    setShowEmojiPicker(false);\n  };\n\n  const handleEmojiClick = (emojiData) => {\n    setNewMessage((prev) => prev + emojiData.emoji);\n    inputRef.current.focus();\n  };\n\n  const getShortName = (fullName) => {\n    const parts = fullName.trim().split(\" \");\n    return parts.length >= 2 ? parts[parts.length - 1] : fullName;\n  };\n\n  const handleReaction = async (messageId, emoji) => {\n    const currentUser = auth.currentUser;\n    const message = messages.find((msg) => msg.id === messageId);\n\n    const currentReactions = message.reactions || {};\n    const existingUsers = currentReactions[emoji] || [];\n\n    const hasReacted = existingUsers.includes(currentUser.uid);\n    const updatedUsers = hasReacted\n      ? existingUsers.filter((id) => id !== currentUser.uid)\n      : [...existingUsers, currentUser.uid];\n\n    const updatedReactions = {\n      ...currentReactions,\n      [emoji]: updatedUsers,\n    };\n\n    await updateDoc(doc(db, \"messages\", messageId), {\n      reactions: updatedReactions,\n    });\n  };\n\n  const renderReactions = (reactions = {}, messageId) => {\n    return (\n      <div className=\"reactions\">\n        {reactionOptions.map((emoji) => {\n          const count = reactions[emoji]?.length || 0;\n          const reacted = reactions[emoji]?.includes(auth.currentUser.uid);\n\n          return (\n            <button\n              key={emoji}\n              className={`reaction-button ${reacted ? \"active\" : \"\"}`}\n              onClick={() => handleReaction(messageId, emoji)}\n            >\n              {emoji} {count > 0 && <span>{count}</span>}\n            </button>\n          );\n        })}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"chat-app\">\n      <div className=\"header\">\n        <h1>Welcome to: {room.toUpperCase()}</h1>\n      </div>\n\n      <div className=\"messages\">\n        {messages.map((message) => (\n          <div key={message.id} className=\"message\">\n            <img\n              src={\n                message.photoURL && message.photoURL.startsWith(\"http\")\n                  ? message.photoURL\n                  : \"https://via.placeholder.com/35\"\n              }\n              alt=\"avatar\"\n              className=\"avatar\"\n              onError={(e) => {\n                e.target.onerror = null;\n                e.target.src = \"https://via.placeholder.com/35\";\n              }}\n            />\n            <div>\n              <span className=\"user\">{getShortName(message.user)}:</span>{\" \"}\n              {message.text}\n              {renderReactions(message.reactions, message.id)}\n            </div>\n          </div>\n        ))}\n\n        {typingUsers.length > 0 && (\n          <div className=\"typing-indicator\">\n            {typingUsers.join(\", \")} {typingUsers.length > 1 ? \"are\" : \"is\"} typing...\n          </div>\n        )}\n      </div>\n\n      <form onSubmit={handleSubmit} className=\"new-message-form\">\n        <div className=\"input-area\">\n          <input\n            ref={inputRef}\n            type=\"text\"\n            value={newMessage}\n            onChange={(e) => handleTyping(e.target.value)}\n            className=\"new-message-input\"\n            placeholder=\"Type your message here...\"\n          />\n          <button\n            type=\"button\"\n            onClick={() => setShowEmojiPicker((prev) => !prev)}\n            className=\"emoji-button\"\n          >\n            😊\n          </button>\n        </div>\n\n        {showEmojiPicker && (\n          <div className=\"emoji-picker\">\n            <EmojiPicker onEmojiClick={handleEmojiClick} />\n          </div>\n        )}\n\n        <button type=\"submit\" className=\"send-button\">\n          Send\n        </button>\n      </form>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}