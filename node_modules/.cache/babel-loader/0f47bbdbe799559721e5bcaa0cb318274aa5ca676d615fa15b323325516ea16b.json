{"ast":null,"code":"var _jsxFileName = \"E:\\\\React Js\\\\react-firebase-chat-app-main\\\\react-firebase-chat-app-main\\\\src\\\\components\\\\Auth.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { auth, RecaptchaVerifier } from \"../firebase-config\";\nimport { signInWithPhoneNumber, updateProfile } from \"firebase/auth\";\nimport Cookies from \"universal-cookie\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cookies = new Cookies();\nexport const Auth = _ref => {\n  _s();\n  let {\n    setIsAuth\n  } = _ref;\n  const [phone, setPhone] = useState(\"\");\n  const [code, setCode] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [confirmResult, setConfirmResult] = useState(null);\n  const setupRecaptcha = () => {\n    window.recaptchaVerifier = new RecaptchaVerifier(\"recaptcha-container\", {\n      size: \"invisible\",\n      callback: response => {\n        // reCAPTCHA solved\n      }\n    }, auth);\n  };\n  const handleSendCode = async () => {\n    setupRecaptcha();\n    const appVerifier = window.recaptchaVerifier;\n    try {\n      const confirmationResult = await signInWithPhoneNumber(auth, phone, appVerifier);\n      setConfirmResult(confirmationResult);\n      alert(\"OTP sent!\");\n    } catch (error) {\n      console.error(\"SMS not sent\", error);\n    }\n  };\n  const handleVerifyCode = async () => {\n    try {\n      const result = await confirmResult.confirm(code);\n      // Optional: set display name\n      if (userName) {\n        await updateProfile(result.user, {\n          displayName: userName\n        });\n      }\n      cookies.set(\"auth-token\", result.user.refreshToken);\n      setIsAuth(true);\n    } catch (error) {\n      console.error(\"Code verification failed\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth\",\n    children: !confirmResult ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your phone number\",\n        value: phone,\n        onChange: e => setPhone(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your name (optional)\",\n        value: userName,\n        onChange: e => setUserName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"recaptcha-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendCode,\n        children: \"Send OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter OTP\",\n        value: code,\n        onChange: e => setCode(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleVerifyCode,\n        children: \"Verify OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Auth, \"4Y0yMQAa5bXlWsH7x/8mlWndMV4=\");\n_c = Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useState","auth","RecaptchaVerifier","signInWithPhoneNumber","updateProfile","Cookies","cookies","Auth","setIsAuth","phone","setPhone","code","setCode","userName","setUserName","confirmResult","setConfirmResult","setupRecaptcha","window","recaptchaVerifier","size","callback","response","handleSendCode","appVerifier","confirmationResult","alert","error","console","handleVerifyCode","result","confirm","user","displayName","set","refreshToken","e","target","value"],"sources":["E:/React Js/react-firebase-chat-app-main/react-firebase-chat-app-main/src/components/Auth.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { auth, RecaptchaVerifier } from \"../firebase-config\";\nimport {\n  signInWithPhoneNumber,\n  updateProfile,\n} from \"firebase/auth\";\nimport Cookies from \"universal-cookie\";\n\nconst cookies = new Cookies();\n\nexport const Auth = ({ setIsAuth }) => {\n  const [phone, setPhone] = useState(\"\");\n  const [code, setCode] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [confirmResult, setConfirmResult] = useState(null);\n\n  const setupRecaptcha = () => {\n    window.recaptchaVerifier = new RecaptchaVerifier(\n      \"recaptcha-container\",\n      {\n        size: \"invisible\",\n        callback: (response) => {\n          // reCAPTCHA solved\n        },\n      },\n      auth\n    );\n  };\n\n  const handleSendCode = async () => {\n    setupRecaptcha();\n    const appVerifier = window.recaptchaVerifier;\n    try {\n      const confirmationResult = await signInWithPhoneNumber(\n        auth,\n        phone,\n        appVerifier\n      );\n      setConfirmResult(confirmationResult);\n      alert(\"OTP sent!\");\n    } catch (error) {\n      console.error(\"SMS not sent\", error);\n    }\n  };\n\n  const handleVerifyCode = async () => {\n    try {\n      const result = await confirmResult.confirm(code);\n      // Optional: set display name\n      if (userName) {\n        await updateProfile(result.user, {\n          displayName: userName,\n        });\n      }\n      cookies.set(\"auth-token\", result.user.refreshToken);\n      setIsAuth(true);\n    } catch (error) {\n      console.error(\"Code verification failed\", error);\n    }\n  };\n\n  return (\n    <div className=\"auth\">\n      {!confirmResult ? (\n        <>\n          <input\n            type=\"text\"\n            placeholder=\"Enter your phone number\"\n            value={phone}\n            onChange={(e) => setPhone(e.target.value)}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Enter your name (optional)\"\n            value={userName}\n            onChange={(e) => setUserName(e.target.value)}\n          />\n          <div id=\"recaptcha-container\"></div>\n          <button onClick={handleSendCode}>Send OTP</button>\n        </>\n      ) : (\n        <>\n          <input\n            type=\"text\"\n            placeholder=\"Enter OTP\"\n            value={code}\n            onChange={(e) => setCode(e.target.value)}\n          />\n          <button onClick={handleVerifyCode}>Verify OTP</button>\n        </>\n      )}\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}