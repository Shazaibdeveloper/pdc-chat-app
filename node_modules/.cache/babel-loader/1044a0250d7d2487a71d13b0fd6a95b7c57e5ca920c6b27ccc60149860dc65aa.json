{"ast":null,"code":"var _jsxFileName = \"E:\\\\React Js\\\\react-firebase-chat-app-main\\\\react-firebase-chat-app-main\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { db, auth } from \"../firebase-config\";\nimport { collection, addDoc, where, serverTimestamp, onSnapshot, query, orderBy, setDoc, doc, deleteDoc } from \"firebase/firestore\";\nimport EmojiPicker from \"emoji-picker-react\"; // ✅ Import Emoji Picker\nimport \"../styles/Chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Chat = _ref => {\n  _s();\n  let {\n    room\n  } = _ref;\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [typingUsers, setTypingUsers] = useState([]);\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false); // ✅\n\n  const typingRef = collection(db, \"typing\");\n  const messagesRef = collection(db, \"messages\");\n  const typingTimeout = useRef(null);\n  const inputRef = useRef(null);\n  useEffect(() => {\n    const queryMessages = query(messagesRef, where(\"room\", \"==\", room), orderBy(\"createdAt\"));\n    const unsubscribe = onSnapshot(queryMessages, snapshot => {\n      const msgs = [];\n      snapshot.forEach(doc => {\n        msgs.push({\n          ...doc.data(),\n          id: doc.id\n        });\n      });\n      setMessages(msgs);\n    });\n\n    // Typing indicator listener\n    const typingQuery = query(typingRef, where(\"room\", \"==\", room));\n    const unsubscribeTyping = onSnapshot(typingQuery, snapshot => {\n      const usersTyping = [];\n      snapshot.forEach(doc => {\n        if (doc.id !== auth.currentUser.uid) {\n          usersTyping.push(doc.data().user);\n        }\n      });\n      setTypingUsers(usersTyping);\n    });\n    return () => {\n      unsubscribe();\n      unsubscribeTyping();\n    };\n  }, [room]);\n  const handleTyping = async value => {\n    setNewMessage(value);\n    const currentUser = auth.currentUser;\n    if (typingTimeout.current) {\n      clearTimeout(typingTimeout.current);\n    }\n    if (value.trim() !== \"\") {\n      await setDoc(doc(db, \"typing\", currentUser.uid), {\n        user: currentUser.displayName,\n        room,\n        timestamp: serverTimestamp()\n      });\n      typingTimeout.current = setTimeout(async () => {\n        await deleteDoc(doc(db, \"typing\", currentUser.uid));\n      }, 3000);\n    } else {\n      await deleteDoc(doc(db, \"typing\", currentUser.uid));\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (newMessage.trim() === \"\") return;\n    const currentUser = auth.currentUser;\n    await addDoc(messagesRef, {\n      text: newMessage,\n      createdAt: serverTimestamp(),\n      user: currentUser.displayName,\n      photoURL: currentUser.photoURL || \"\",\n      uid: currentUser.uid,\n      room\n    });\n    await deleteDoc(doc(db, \"typing\", currentUser.uid));\n    setNewMessage(\"\");\n    setShowEmojiPicker(false); // ✅ Close emoji picker after sending\n  };\n\n  const getShortName = fullName => {\n    const parts = fullName.trim().split(\" \");\n    return parts.length >= 2 ? parts[parts.length - 1] : fullName;\n  };\n  const handleEmojiClick = emojiData => {\n    setNewMessage(prev => prev + emojiData.emoji);\n    inputRef.current.focus(); // ✅ Refocus input after emoji\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome to: \", room.toUpperCase()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: message.photoURL && message.photoURL.startsWith(\"http\") ? message.photoURL : \"https://via.placeholder.com/35\",\n          alt: \"avatar\",\n          className: \"avatar\",\n          onError: e => {\n            e.target.onerror = null;\n            e.target.src = \"https://via.placeholder.com/35\";\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"user\",\n          children: [getShortName(message.user), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), \" \", message.text]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)), typingUsers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typing-indicator\",\n        children: [typingUsers.join(\", \"), \" \", typingUsers.length > 1 ? \"are\" : \"is\", \" typing...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"new-message-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: inputRef,\n          type: \"text\",\n          value: newMessage,\n          onChange: e => handleTyping(e.target.value),\n          className: \"new-message-input\",\n          placeholder: \"Type your message here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => setShowEmojiPicker(prev => !prev),\n          className: \"emoji-button\",\n          children: \"\\uD83D\\uDE0A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), showEmojiPicker && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emoji-picker\",\n        children: /*#__PURE__*/_jsxDEV(EmojiPicker, {\n          onEmojiClick: handleEmojiClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"send-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"9GI01QCUO941moMFg4iW2NeqGzc=\");\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","db","auth","collection","addDoc","where","serverTimestamp","onSnapshot","query","orderBy","setDoc","doc","deleteDoc","EmojiPicker","Chat","room","messages","setMessages","newMessage","setNewMessage","typingUsers","setTypingUsers","showEmojiPicker","setShowEmojiPicker","typingRef","messagesRef","typingTimeout","inputRef","queryMessages","unsubscribe","snapshot","msgs","forEach","push","data","id","typingQuery","unsubscribeTyping","usersTyping","currentUser","uid","user","handleTyping","value","current","clearTimeout","trim","displayName","timestamp","setTimeout","handleSubmit","event","preventDefault","text","createdAt","photoURL","getShortName","fullName","parts","split","length","handleEmojiClick","emojiData","prev","emoji","focus","toUpperCase","map","message","startsWith","e","target","onerror","src","join"],"sources":["E:/React Js/react-firebase-chat-app-main/react-firebase-chat-app-main/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { db, auth } from \"../firebase-config\";\nimport {\n  collection,\n  addDoc,\n  where,\n  serverTimestamp,\n  onSnapshot,\n  query,\n  orderBy,\n  setDoc,\n  doc,\n  deleteDoc,\n} from \"firebase/firestore\";\n\nimport EmojiPicker from \"emoji-picker-react\"; // ✅ Import Emoji Picker\nimport \"../styles/Chat.css\";\n\nexport const Chat = ({ room }) => {\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [typingUsers, setTypingUsers] = useState([]);\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false); // ✅\n\n  const typingRef = collection(db, \"typing\");\n  const messagesRef = collection(db, \"messages\");\n  const typingTimeout = useRef(null);\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    const queryMessages = query(\n      messagesRef,\n      where(\"room\", \"==\", room),\n      orderBy(\"createdAt\")\n    );\n\n    const unsubscribe = onSnapshot(queryMessages, (snapshot) => {\n      const msgs = [];\n      snapshot.forEach((doc) => {\n        msgs.push({ ...doc.data(), id: doc.id });\n      });\n      setMessages(msgs);\n    });\n\n    // Typing indicator listener\n    const typingQuery = query(typingRef, where(\"room\", \"==\", room));\n    const unsubscribeTyping = onSnapshot(typingQuery, (snapshot) => {\n      const usersTyping = [];\n      snapshot.forEach((doc) => {\n        if (doc.id !== auth.currentUser.uid) {\n          usersTyping.push(doc.data().user);\n        }\n      });\n      setTypingUsers(usersTyping);\n    });\n\n    return () => {\n      unsubscribe();\n      unsubscribeTyping();\n    };\n  }, [room]);\n\n  const handleTyping = async (value) => {\n    setNewMessage(value);\n    const currentUser = auth.currentUser;\n\n    if (typingTimeout.current) {\n      clearTimeout(typingTimeout.current);\n    }\n\n    if (value.trim() !== \"\") {\n      await setDoc(doc(db, \"typing\", currentUser.uid), {\n        user: currentUser.displayName,\n        room,\n        timestamp: serverTimestamp(),\n      });\n\n      typingTimeout.current = setTimeout(async () => {\n        await deleteDoc(doc(db, \"typing\", currentUser.uid));\n      }, 3000);\n    } else {\n      await deleteDoc(doc(db, \"typing\", currentUser.uid));\n    }\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (newMessage.trim() === \"\") return;\n\n    const currentUser = auth.currentUser;\n\n    await addDoc(messagesRef, {\n      text: newMessage,\n      createdAt: serverTimestamp(),\n      user: currentUser.displayName,\n      photoURL: currentUser.photoURL || \"\",\n      uid: currentUser.uid,\n      room,\n    });\n\n    await deleteDoc(doc(db, \"typing\", currentUser.uid));\n    setNewMessage(\"\");\n    setShowEmojiPicker(false); // ✅ Close emoji picker after sending\n  };\n\n  const getShortName = (fullName) => {\n    const parts = fullName.trim().split(\" \");\n    return parts.length >= 2 ? parts[parts.length - 1] : fullName;\n  };\n\n  const handleEmojiClick = (emojiData) => {\n    setNewMessage((prev) => prev + emojiData.emoji);\n    inputRef.current.focus(); // ✅ Refocus input after emoji\n  };\n\n  return (\n    <div className=\"chat-app\">\n      <div className=\"header\">\n        <h1>Welcome to: {room.toUpperCase()}</h1>\n      </div>\n\n      <div className=\"messages\">\n        {messages.map((message) => (\n          <div key={message.id} className=\"message\">\n            <img\n              src={\n                message.photoURL && message.photoURL.startsWith(\"http\")\n                  ? message.photoURL\n                  : \"https://via.placeholder.com/35\"\n              }\n              alt=\"avatar\"\n              className=\"avatar\"\n              onError={(e) => {\n                e.target.onerror = null;\n                e.target.src = \"https://via.placeholder.com/35\";\n              }}\n            />\n            <span className=\"user\">{getShortName(message.user)}:</span>{\" \"}\n            {message.text}\n          </div>\n        ))}\n\n        {typingUsers.length > 0 && (\n          <div className=\"typing-indicator\">\n            {typingUsers.join(\", \")} {typingUsers.length > 1 ? \"are\" : \"is\"} typing...\n          </div>\n        )}\n      </div>\n\n      <form onSubmit={handleSubmit} className=\"new-message-form\">\n        <div className=\"input-area\">\n          <input\n            ref={inputRef}\n            type=\"text\"\n            value={newMessage}\n            onChange={(e) => handleTyping(e.target.value)}\n            className=\"new-message-input\"\n            placeholder=\"Type your message here...\"\n          />\n          <button\n            type=\"button\"\n            onClick={() => setShowEmojiPicker((prev) => !prev)}\n            className=\"emoji-button\"\n          >\n            😊\n          </button>\n        </div>\n\n        {showEmojiPicker && (\n          <div className=\"emoji-picker\">\n            <EmojiPicker onEmojiClick={handleEmojiClick} />\n          </div>\n        )}\n\n        <button type=\"submit\" className=\"send-button\">\n          Send\n        </button>\n      </form>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}